version: "3.7"

services:

  postgres:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    ports:
      - $POSTGRES_PORT:5432
    env_file:
      - ./.env
    environment:
      - ./.env
    volumes:
      - postgres-data:/data
    networks:
      - backend

  web:
    image: calendarapi
    container_name: web
    build: .
    restart: always
    command: ["./scripts/docker.sh", "web"]
    env_file:
      - ./.env
    environment:
      - DATABASE_URI=$DATABASE_URI
      - CELERY_BROKER_URL=$CELERY_BROKER_URL
      - CELERY_RESULT_BACKEND_URL=$CELERY_RESULT_BACKEND_URL
    volumes:
      - main-app-data:/data
    ports:
      - "$FLASK_PORT:$FLASK_PORT"
    depends_on:
      - postgres
    networks:
      - backend

  redis:
    image: redis:7.2.3
    container_name: redis
    restart: always
    ports:
      - $REDIS_PORT:$REDIS_PORT
    volumes:
      - redis-data:/data
    command:
      - redis-server
      - --port $REDIS_PORT
      - --requirepass $REDIS_PASS
      - --maxmemory 150mb
    networks:
      - backend

  celery:
    image: calendarapi
    container_name: celery
    command: ["scripts/docker.sh", "celery"]
    restart: always
    env_file:
      - ./.env
    volumes:
      - celery-data:/data
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=$CELERY_BROKER_URL
      - CELERY_RESULT_BACKEND_URL=$CELERY_BROKER_URL
    networks:
      - backend

  # flower:
  #   image: mher/flower
  #   container_name: flower
  #   build: .
  #   restart: always
  #   env_file:
  #     - ./.env
  #   command: ["scripts/docker.sh", "flower"]
  #   volumes:
  #     - flower-data:/data
  #   ports:
  #     - "$FLOWER_PORT:$FLOWER_PORT"
  #   depends_on:
  #     - celery
  #     - redis
  #   networks:
  #     - backend

networks:
  backend:
    driver: bridge

volumes:
  postgres-test-data:
  postgres-data:
  main-app-data:
  celery-data:
  flower-data:
  redis-data:
