"""empty message

Revision ID: 034caa589da3
Revises: b8b3f4413403
Create Date: 2023-12-15 23:42:45.454903

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "034caa589da3"
down_revision = "b8b3f4413403"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "permissions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("view_name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=100), nullable=False),
        sa.Column("email", sa.String(length=100), nullable=False),
        sa.Column("password", sa.String(length=1024), nullable=False),
        sa.Column("description", sa.String(length=2000), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("is_superuser", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "users_to_permissions",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("permission_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["permission_id"],
            ["permissions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "permission_id"),
    )
    # op.drop_table('user')
    op.execute('DROP TABLE "user" CASCADE;')
    op.drop_table("token_blocklist")
    # with op.batch_alter_table('user_security', schema=None) as batch_op:
    #     batch_op.drop_constraint('user_security_user_id_fkey', type_='foreignkey')
    #     batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user_security", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "user_security_user_id_fkey",
            "user",
            ["user_id"],
            ["id"],
            ondelete="CASCADE",
        )

    op.create_table(
        "token_blocklist",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("jti", sa.VARCHAR(length=36), autoincrement=False, nullable=False),
        sa.Column(
            "token_type", sa.VARCHAR(length=10), autoincrement=False, nullable=False
        ),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("revoked", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "expires", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name="token_blocklist_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="token_blocklist_pkey"),
        sa.UniqueConstraint("jti", name="token_blocklist_jti_key"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "username", sa.VARCHAR(length=80), autoincrement=False, nullable=False
        ),
        sa.Column("email", sa.VARCHAR(length=80), autoincrement=False, nullable=False),
        sa.Column(
            "password", sa.VARCHAR(length=255), autoincrement=False, nullable=False
        ),
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("is_superuser", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="user_pkey"),
        sa.UniqueConstraint("email", name="user_email_key"),
        sa.UniqueConstraint("username", name="user_username_key"),
    )
    op.drop_table("users_to_permissions")
    op.drop_table("users")
    op.drop_table("permissions")
    # ### end Alembic commands ###
